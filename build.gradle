buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
	
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0.16,6.2)', changing: true
		classpath 'org.parchmentmc:librarian:1.+'
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "2.+"
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "${modFilename}-refmap.json"
    config "${modId}.mixins.json"
}

version = modMinecraftVersion + "-" +modVersion
group = modGroup
archivesBaseName = modFilename

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
println('Mod Name: ' + modFilename + ', Mod Version: ' + modVersion + ', Minecraft Version: ' + modMinecraftVersion + ', '+modLoader+' Version: ' + modLoaderVersion)

minecraft {
    mappings channel: mappingsChannel, version: mappingsVersion
    //makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run/client')
            property 'forge.logging.markers', 'REGISTRIES'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			args '--username', 'Stereowalker', '--uuid', "$System.env.MINECRAFTUUIDSTEREOWALKER"

            mods {
                modId {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')
            property 'forge.logging.markers', 'REGISTRIES'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
			property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
			
            mods {
                modId {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	maven {url = "https://dvs1.progwml6.com/files/maven/"}// JEI
	maven {url "https://modmaven.dev/" }// UnionLib
	maven {url = "https://maven.theillusivec4.top/"}
	maven {url 'https://maven.blamejared.com'}
	maven {url "https://www.cursemaven.com"}
    maven {url = "https://repo.spongepowered.org/maven"} // mixin
    maven {url "https://maven.shedaniel.me/"} // cloth config
}

dependencies {
	minecraft 'net.minecraftforge:forge:' + modMinecraftVersion + '-' + modLoaderVersion
	annotationProcessor "org.spongepowered:mixin:${modMixinVersion}:processor"
	implementation "org.spongepowered:mixin:${modMixinVersion}"
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation fg.deobf("com.stereowalker.unionlib:UnionLib:"+modMinecraftVersion+"-"+unionLibVersion+"-"+modLoader+"")
	
	compileOnly fg.deobf("com.stereowalker.combat:C.O.M.B.A.T:"+modMinecraftVersion+"-"+combatVersion+":api")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:"+modMinecraftVersion+"-"+patchouliVersion+":api")
	
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:"+modMinecraftVersion+"-"+patchouliVersion+"")
	implementation fg.deobf("curse.maven:guard-villagers-360203:5023022")
	implementation fg.deobf("curse.maven:balm-531761:4442615")
	implementation fg.deobf("curse.maven:waystones-245755:4943242")
	implementation fg.deobf("curse.maven:collective-342584:4860332")
	implementation fg.deobf("curse.maven:villager_names-345854:4860371")
	implementation fg.deobf("curse.maven:choicetheorems-overhauled-village-623908:4521179")
	implementation fg.deobf("curse.maven:autoreglib-250363:3642382")
	implementation fg.deobf("curse.maven:quark-243121:3840125")
	implementation fg.deobf("curse.maven:more-crafting-tables-for-forge-417365:3803641")
	implementation fg.deobf("curse.maven:farmers-delight-398521:4679315")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": modFilename,
            "Specification-Vendor": "Stereowalker",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Stereowalker",
            "MixinConfigs": modId+".mixins.json",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
//def reobfFile = file("$buildDir/reobfJar/output.jar")
//def reobfArtifact = artifacts.add('default', reobfFile) {
//    type 'jar'
//    builtBy 'reobfJar'
//}
publishing {
    publications {
        mavenJava(MavenPublication) {
        	afterEvaluate {
                artifact project.jar
            }
        
        	groupId = project.group
			artifactId = project.archivesBaseName
			version = project.version
        }
    }
    repositories {
        maven {
            name = "modmaven"
			credentials {
				username "$System.env.ARTIFACTORYUSER"
				password "$System.env.ARTIFACTORYPASS"
			}
			url = "https://modmaven.dev/artifactory/local-releases/"
        }
    }
}

artifacts {
}
